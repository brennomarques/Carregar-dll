unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls,  WinInet, Vcl.Buttons,
  Vcl.ExtCtrls, PngSpeedButton, System.IniFiles;

type
  TForm1 = class(TForm)
    Button1: TButton;
    Label1: TLabel;
    BitBtn1: TBitBtn;
    Panel1: TPanel;
    Panel2: TPanel;
    Memo1: TMemo;
    PngSpeedButton1: TPngSpeedButton;
    Edit1: TEdit;
    Teste: TButton;
    BitBtn2: TBitBtn;
    Label2: TLabel;
    BitBtn3: TBitBtn;
    Edit2: TEdit;
    BitBtn4: TBitBtn;
    BitBtn5: TBitBtn;
    procedure Button1Click(Sender: TObject);
    procedure BitBtn1Click(Sender: TObject);
    procedure PngSpeedButton1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure TesteClick(Sender: TObject);
    Function CaminhoPerfil: String;
    Function eBuscaNome(dado: String):String;
    procedure BitBtn3Click(Sender: TObject);
    procedure BitBtn4Click(Sender: TObject);
    procedure BitBtn5Click(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.BitBtn1Click(Sender: TObject);
var
  Flags : Cardinal;
 begin

  if not InternetGetConnectedState(@Flags, 0) then
    ShowMessage('Sem conexão com a Internet')
  else
    if (Flags and INTERNET_CONNECTION_LAN) <> 0 then
      ShowMessage('conexão com a Internet através da Lan')
    else
      if (Flags and INTERNET_CONNECTION_PROXY) <> 0 then
        ShowMessage('conexão através de um proxy')
      else
        ShowMessage('conexão com a Internet');

end;

procedure TForm1.BitBtn3Click(Sender: TObject);
var
  usuarioname, caminho: String;
begin
    caminho:= '\AppData\Roaming\Mozilla\Firefox';
    usuarioname:= GetEnvironmentVariable('userprofile');//Localiza o caminho onde a pasta do usuario esta.
    Label2.Caption:=usuarioname+caminho;
    Edit2.Text:=usuarioname+caminho;

end;
procedure TForm1.BitBtn4Click(Sender: TObject);
var
  varString, varArquivo, nomearq: string;
  StringList: TStringList;
begin
   if DirectoryExists('C:\SOLUTI\') then //verificado se o caminho exite,(estou garantindo que este caminho não foi alterado)
   begin
    ShowMessage('O diretório pasta SOLUTI existe.');
    if FileExists('C:\SOLUTI\installs.ini') then //aqui verificado de tem o arquivo installs.ini
    begin
      ShowMessage('O diretório installs');
      varArquivo := 'C:\SOLUTI\profiles.ini'; //carrego o caminho do arquivo installs.ini
      StringList := TStringList.Create;
      try
        StringList.LoadFromFile(varArquivo);
        varString := StringList.Text;// Joga arquivo carregado na StringList na variável;
        nomearq:= eBuscaNome(varString);//função para localizar nome
        ShowMessage('Nome da procura: '+nomearq);
      finally
        FreeAndNil(StringList);
      end;
    end
    else
    begin
      if FileExists('C:\SOLUTI\profiles.ini') then//aqui verificado tem arquivo profiles.ini
      begin
        ShowMessage('O diretório profiles');
      end
      else//não tem profiles.ini
      begin
        ShowMessage('O diretório não encontra 2');
      end;
    end;
   end
   else //aqui notifico que não exito o caminho, ou náo tem mozilla
   begin
    ShowMessage('O diretório não existe.');
   end;
end;

function TForm1.eBuscaNome(dado: string): String;
var
  varString, nome: string;
  SizeVet, i, x: Integer;
begin
  varString:= dado;//recebe dados para realizar o procedimento de busca.
  SizeVet := Length(varString);//saber o tamanho da StringList
  nome:='false';
  for i := 0 to SizeVet do//roda até chega no tamnho da SizeVet. o SizeVet esta amarzenado o tamnho da StringList
  begin
    if (varString[i] = '[') and (varString[i+1] = 'I') then
    begin
      x:=i;
      while x <> -1 do
      begin
        nome:=nome+varString[x];//Variavel nome recebe a possição de X
        if varString[x] = ']' then //se a possição for igual a que procuro, garanto a parada do LOOP.
        begin
          //nome:=nome+varString[x];
          ShowMessage('Nome: '+nome);
          x:=-1;
          result:= nome;
        end
        else
        begin//X anda um casa enquando não for -1
          x:=x+1;
        end;
      end;
    end;
  end;
end;

procedure TForm1.BitBtn5Click(Sender: TObject);
var
  varString, varArquivo, nome: string;
  StringList: TStringList;
  SizeVet, i, x: Integer;
begin
  varArquivo := 'C:\SOLUTI\profiles.ini';
  StringList := TStringList.Create;

  try
    StringList.LoadFromFile(varArquivo);
    // Joga arquivo carregado na StringList na sua variável;
    varString := StringList.Text;
    memo1.Lines.Text:= varString;//

    SizeVet := Length(varString);//saber o tamanho da StringList

    for i := 0 to SizeVet do//roda até chega no tamnho da SizeVet. o SizeVet esta amarzenado o tamnho da StringList
    begin
      if (varString[i] = '[') and (varString[i+1] = 'I') then
      begin
        x:=i;
        while x <> -1 do
        begin
          nome:=nome+varString[x];//Variavel nome recebe a possição de X
          if varString[x] = ']' then //se a possição for igual a que procuro, garanto a parada do LOOP.
          begin
            //nome:=nome+varString[x];
            ShowMessage('Nome: '+nome);
            x:=-1;
          end
          else
          begin//X anda um casa enquando não for -1
            x:=x+1;
          end;
        end;
      end;
    end;
     // Proceder agora como quiser com sua variável;
  finally
    FreeAndNil(StringList);
  end;
end;

function TForm1.CaminhoPerfil: String;
var
 ArqIni: TIniFile;
 aux, aux1: string;
 i: Integer;
begin
  ArqIni := TIniFile.Create('C:\SOLUTI\profiles.ini');
 i:=0;
 while i >=0 do
 begin
   aux1:='Profile'+IntToStr(i);//aux1 recebe a concatenação para String
   ShowMessage('Profile' + IntToStr(i));
   aux := ArqIni.ReadString(aux1, 'Default', ''); //aqui vou anda em cada Profile
   if aux = '1' then //se Default for verdadeido ou seja =1
   begin
    //ShowMessage('dentro, Profile' + IntToStr(i));
    aux := ArqIni.ReadString(aux1, 'Path', '');//pega o caminho do profile em uso

    ShowMessage('Caminho: ' + aux);
    i:=-1;//condição de parada, se estava aqui pr achou default logo decrementa I para da stop para condição.
   end
   else//caso se aux não for =1 ele incremento a I.
   begin
    i:=i+1;
   end;
end;
end;

procedure TForm1.Button1Click(Sender: TObject);
var
    Registro: string;
    Arquivo: TextFile;
    NomeArquivo: string;

begin
  NomeArquivo   := 'c:\SOLUTI\pkcs11.txt';
  AssignFile(Arquivo, NomeArquivo);
  if FileExists(NomeArquivo) then
  begin
    Append(Arquivo);
    Registro := 'library=eps2003csp11.dll';
    Writeln(Arquivo, Registro);
    Registro := 'name=TOKEN';
    Writeln(Arquivo, Registro);
    WriteLn(Arquivo,'');//Acrescenta outra linha
    CloseFile(Arquivo);
    Label1.Caption := 'PKCS11 Configurado.';
    Label1.Font.Color := clblue;

  end
  else
  begin
    ShowMessage('Não configurado PKCS11.');
  end;
end;

procedure TForm1.Button2Click(Sender: TObject);
var
  arquivo : TIniFile;
  existeArquivo : BOOL;
begin
  if not DirectoryExists('C:\sga') then
  begin
    if not CreateDir('C:\sga') then
    begin
      ShowMessage('Erro ao tentar criar o diretório!');
    end;
  end;
  existeArquivo := True;
  // Verifica se existe o arquivo
  if not FileExists('C:\sga\saga.ini') then
    existeArquivo := False;

  arquivo := TIniFile.Create('C:\sga\saga.ini');

  // Gravar valores
  if not existeArquivo then
  begin
    arquivo.WriteString('BASEDADOS', 'PathSec', 'PathSecTestes');
    arquivo.WriteString('BASEDADOS', 'Base', 'BaseTestes');
    arquivo.WriteString('BASEDADOS', 'Chave', 'ChaveTestes');
    arquivo.WriteString('BASEDADOS', 'Default', '1');
  end;
  // Lendo valores
  Edit1.Text := arquivo.ReadString('BASEDADOS', 'Default', '');

end;



procedure TForm1.TesteClick(Sender: TObject);
var
 ArqIni: TIniFile;
 aux, aux1: string;
 i: Integer;
begin
  ArqIni := TIniFile.Create('C:\SOLUTI\profiles.ini');
 i:=0;
 while i >=0 do
 begin
   aux1:='Profile'+IntToStr(i);//aux1 recebe a concatenação para String
   ShowMessage('Profile' + IntToStr(i));
   aux := ArqIni.ReadString(aux1, 'Default', ''); //aqui vou anda em cada Profile
   if aux = '1' then //se Default for verdadeido ou seja =1
   begin
    //ShowMessage('dentro, Profile' + IntToStr(i));
    aux := ArqIni.ReadString(aux1, 'Path', '');//pega o caminho do profile em uso
    ShowMessage('Caminho: ' + aux);
    i:=-1;//condição de parada, se estava aqui pr achou default logo decrementa I para da stop para condição.
   end
   else//caso se aux não for =1 ele incremento a I.
   begin
    i:=i+1;
   end;
 end;


 Edit1.Text := ArqIni.ReadString('Profile0', 'Default', '');
 aux := ArqIni.ReadString('Profile1', 'Default', '');

end;

procedure TForm1.PngSpeedButton1Click(Sender: TObject);
var
 ArqIni: TIniFile;
 aux: string;
begin
 ArqIni := TIniFile.Create('C:\SOLUTI\profiles.ini');
 ArqIni.ReadSections(memo1.Lines);
 //ArqIni.ReadSection(memo1.Lines[0], memo1.Lines);

 Edit1.Text := ArqIni.ReadString('InstallE7CF176E110C211B', 'Default', '');

 aux := ArqIni.ReadString('Profile1', 'Default', '');


end;
end.
